####################################################################
# MyS specific queries used in ge-export
# In order to add support for new types of databases, it is (hopefully) as simple as copying
# this file, and adjusting the SQL queries as necessary
####################################################################

####################################################################
# Creating and dropping the GE Export database schema
####################################################################
DROP_BUILDS=DROP TABLE IF EXISTS builds
CREATE_BUILDS=CREATE TABLE builds(                          \
   id                   bigint  AUTO_INCREMENT PRIMARY KEY   NOT NULL,   \
   build_id             VARCHAR(100) NOT NULL,\
   user_name            text      NOT NULL,\
   root_project_name    text      NOT NULL,\
   start                timestamp NOT NULL DEFAULT NOW(),\
   finish               timestamp NOT NULL DEFAULT NOW(),\
   status               text      NOT NULL,\
   tags                 text,                               \
   CONSTRAINT unique_build_id UNIQUE(build_id)              \
);
DROP_TASKS=DROP TABLE IF EXISTS tasks
CREATE_TASKS=CREATE TABLE tasks(                                                        \
   id                   bigint  AUTO_INCREMENT PRIMARY KEY NOT NULL,                    \
   build_id             VARCHAR(100)    NOT NULL references builds(build_id) ON DELETE CASCADE, \
   task_id              bigint  NOT NULL,                                               \
   path                 text    NOT NULL,                                               \
   type                 text    NOT NULL,                                               \
   duration_millis      int     NOT NULL,                                               \
   outcome              text    NOT NULL,                                               \
   CONSTRAINT unique_build_task UNIQUE(build_id,task_id)                                \
);
DROP_CUSTOM_VALUES=DROP TABLE IF EXISTS custom_values
CREATE_CUSTOM_VALUES=CREATE TABLE custom_values(    \
    id                  bigint          AUTO_INCREMENT PRIMARY KEY NOT NULL,\
    build_id            VARCHAR(100)    NOT NULL references builds(build_id) ON DELETE CASCADE,\
    name                text            NOT NULL,   \
    value               text            NOT NULL    \
);

DROP_TESTS=DROP TABLE IF EXISTS tests
CREATE_TESTS=CREATE TABLE tests(\
   id                   bigint  AUTO_INCREMENT PRIMARY KEY   NOT NULL,\
   build_id             VARCHAR(100)      NOT NULL references builds(build_id) ON DELETE CASCADE,\
   task_id              bigint      NOT NULL,\
   test_id              bigint      NOT NULL,\
   name                 text      NOT NULL,\
   class_name           text      NOT NULL,\
   status               text      NOT NULL,\
   duration_millis      int       NOT NULL,\
   CONSTRAINT unique_test UNIQUE(build_id,task_id,test_id)\
);

####################################################################
# Queries used in com.gradle.exportapi.dao.BuildDAO
####################################################################
LAST_BUILD_ID =select build_id from builds where id = (select max(id) from builds);
BUILD_TABLE_ID=select id from builds where build_id = ?
INSERT_BUILD=INSERT INTO builds (build_id, user_name, root_project_name, start, finish, status, tags) VALUES (?,?,?,?,?,?,?)

####################################################################
# Queries used in com.gradle.exportapi.dao.CustomValueDAO
####################################################################
INSERT_CUSTOM_VALUE=INSERT INTO custom_values (build_id, name, value) VALUES (?,?,?)

####################################################################
# Queries used in com.gradle.exportapi.dao.TasksDAO
####################################################################
INSERT_TASK=INSERT INTO tasks (build_id, task_id, path, type, duration_millis, outcome) VALUES (?,?,?,?,?,?)

####################################################################
# Queries used in com.gradle.exportapi.dao.TestsDAO
####################################################################
INSERT_TEST=INSERT INTO tests (build_id, task_id, test_id, name, class_name, status, duration_millis) VALUES (?,?,?,?,?,?,?)
